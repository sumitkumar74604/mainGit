Xampp Applicqtion run :------
sudo /opt/lampp/manager-linux-x64.run










  INSERT INTO `EmployeeRecord`(`EMP_ID`, `EMP_NAME`, `EMP_EMAIL`, `EMP_PASSWORD`, `EMP_SALARY`, `EMP_DESIGNATION`, `EMP_ADDRESS`, `EMP_GENDER`) VALUES (mailto:101,"rahulsharma","rahul@gmail.com","12345",34500.45,"Python Developer","Indore M.P","Male")
==============================

UPDATE `EmployeeRecord` SET `EMP_ID`= 102 WHERE EMP_NAME="Neha Sharma"

===============================
SELECT * FROM`EmployeeRecord` 
SELECT EMP_ID, EMP_NAME FROM `EmployeeRecord` 
SELECT EMP_ID, EMP_NAME FROM `EmployeeRecord` WHERE EMP_GENDER="Female"
SELECT * FROM `EmployeeRecord` WHERE EMP_SALARY > 25000.0
SELECT * FROM `EmployeeRecord` WHERE EMP_SALARY > 30000 OR EMP_GENDER = "Female" 
SELECT * FROM `EmployeeRecord` WHERE EMP_SALARY > 30000 AND EMP_GENDER = "Female"
SELECT * FROM `EmployeeRecord` WHERE EMP_SALARY BETWEEN 40000 AND 50000
SELECT * FROM `EmployeeRecord` ORDER BY EMP_NAME
SELECT * FROM `EmployeeRecord` ORDER BY EMP_SALARY
SELECT * FROM `EmployeeRecord` ORDER BY EMP_SALARY DESC
SELECT COUNT(*) FROM `EmployeeRecord` 
SELECT MAX(EMP_SALARY) FROM `EmployeeRecord`
SELECT MIN(EMP_SALARY) FROM `EmployeeRecord`
SELECT AVG(EMP_SALARY) FROM `EmployeeRecord`
SELECT COUNT(*) FROM `EmployeeRecord` GROUP BY EMP_GENDER
SELECT COUNT(*) FROM `EmployeeRecord` GROUP BY EMP_DESIGNATION
SELECT COUNT(*) FROM `EmployeeRecord` GROUP BY EMP_DESIGNATION HAVING COUNT(EMP_DESIGNATION)>1
=====================================

INSERT INTO `Department`(`DEP_ID`, `DEP_NAME`) VALUES (201,"Account"), 
(202,"IT"),
(203,"HR"),
(204,"R&D")
----------------
SELECT * FROM `Department` LIMIT 2
---------------
ALTER TABLE Department ADD FK_EMP_ID INT NOT NULL DEFAULT 0;
=================
CREATE TABLE Department
(
    DEP_ID int NOT NULL,
    DEP_NAME int NOT NULL,
    EMP_ID int,
    PRIMARY KEY (DEP_ID),
    FOREIGN KEY (EMP_ID) REFERENCES EmployeeRecord(EMP_ID)
);
=============================
INSERT INTO `Department`(`DEP_ID`, `DEP_NAME`, `EMP_ID`) VALUES (201,"Accounts",101),
(202,"IT",102),
(203,"HR",103),
(204,"R&D",104)
============================

NATURAL JOIN
------------------

SELECT emp.EMP_NAME, dep.DEP_NAME FROM Department AS dep
NATURAL JOIN EmployeeRecord AS emp;
====================================

SELECT emp.EMP_NAME, dep.DEP_NAME FROM Department AS dep
RIGHT JOIN EmployeeRecord AS emp ON emp.EMP_ID = dep.EMP_ID;
=====================================

SHOW TABLES;
====================================

RENAME TABLE Department to Department1

===================================

Note: Only remove data not table.

TRUNCATE TABLE Department

===================================

DELETE FROM `Department` WHERE DEP_NAME = "R&D"

===================================

SELECT REVERSE(EMP_NAME) FROM EmployeeRecord;

===================================

DROP TABLE Department;

===================================



Django_Shell_command****************************


///////////////////////////////////////////////////////////////////
Create Application in django project:=>

1.
python3 manage.py startapp adminapp
=====================
2.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'umanagement',
    'adminapp'
]
==========================
3.
add templates folder inside adminapp
=========================

4.
adminapp views.py
from django.shortcuts import render
from django.http import HttpResponse
# Create your views here.

def index(request):
    return HttpResponse("Welcome to AdminApp!!")
===============================

5.
Add below code in adminapp/urls.py
from django.urls import path
from . import views
urlpatterns = [
path('', views.index),
]

==============================
6.
Move to umanagement-> umanagement ->
urls.py and add below code in the header

from django.urls import include

And include adminapp urls in Project
urlpatterns list

path("adminapp/",
include("adminapp.urls")),

==========================
Admin Panel

Admin - Django entirely automates creation of
admin interfaces for models.
Creating an admin user 
First weâ€™ll need to create a user who can login to the
admin site. Run the following command:

python3 manage.py createsuperuser
Enter your desired username and press enter.
Username: admin

You will then be prompted for your desired email
address:
Email address: mailto:admin@example.com
The final step is to enter your password. You will be
asked to enter your password twice, the second time
as a confirmation of the first.
Password: **********
Password (again): *********
Superuser created successfully.
===============================

Now start App
python3 manage.py runserver
Visit http://127.0.0.1:8000/admin/
Make the adminapp
modifiable in the admin
Now
Go to adminapp/admin.py and add below
code :

from .models import User
admin.site.register(User)

Again run 
python3 manage.py runserver
And Visit http://127.0.0.1:8000/admin/
===========================


Python Shell and Writing ORM queries
On terminal quit running server and
open python shell using
python manage.py shell
-------------------------------

Python 3.8.10 (default, Nov 22 2023, 10:22:35) 
[GCC 9.4.0] on linux
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> from umanagement.models import User
>>> User.objects.all()
<QuerySet [<User: Rahul Sharma, mailto:rahulsharma@gmail.com, 12345, 7899876544, Indore M.P, Male, 2000-01-14, 2023-12-22 07:36:47.832156+00:00,0,user>, <User: Admin, mailto:admin@gmail.com, 12345, 9456787652, Ujjain M.P, Male, 2000-12-22, 2023-12-22 08:06:39+00:00,1,admin>]>
>>> 
==================
Filter records

>>> User.objects.filter(gender="Female")
<QuerySet [<User: Priya Sharma, mailto:priya@gmail.com, 12345, 7899877654, Mumbai Maharastra, Female, 1995, 2023-12-22 08:19:07.616001+00:00,0,user>]>
>>> 

======================
Add a new Record

userObj = User(name="Priya mailto:sharma",email="priya@gmail.com",password=12345,mobile=7899877654,gender="Female",address="Mumbai Maharastra",dob=1999-2-2)
>>> userObj.save()
>>> User.objects.all()
<QuerySet [<User: Rahul Sharma, mailto:rahulsharma@gmail.com, 12345, 7899876544, Indore M.P, Male, 2000-01-14, 2023-12-22 07:36:47.832156+00:00,0,user>, <User: Admin, mailto:admin@gmail.com, 12345, 9456787652, Ujjain M.P, Male, 2000-12-22, 2023-12-22 08:06:39+00:00,1,admin>, <User: Manoj Sharma, mailto:manoj@gmail.com, 12345, 7899877654, Bhopal M.P, Male, 1985, 2023-12-22 08:17:39.254556+00:00,0,user>, <User: Priya Sharma, mailto:priya@gmail.com, 12345, 7899877654, Mumbai Maharastra, Female, 1995, 2023-12-22 08:19:07.616001+00:00,0,user>]>
>>> 

===================
Fetch data

>>> result = User.objects.all()
>>> for u in result:
...     print(u)
... 
Admin, mailto:admin@gmail.com, 12345, 9456787652, Ujjain M.P, Male, 2000-12-22, 2023-12-22 08:06:39+00:00,1,admin
Manoj Sharma, mailto:manoj@gmail.com, 12345, 7899877654, Bhopal M.P, Male, 1985, 2023-12-22 08:17:39.254556+00:00,0,user
Priya Sharma, mailto:priya@gmail.com, 12345, 7899877654, Mumbai Maharastra, Female, 1995, 2023-12-22 08:19:07.616001+00:00,0,user
Rahul Sharma, mailto:rahulsharma@gmail.com, 12345, 7899877654, Bhopal M.P, Male, 1985, 2023-12-22 08:22:40.151966+00:00,0,user
>>> 

